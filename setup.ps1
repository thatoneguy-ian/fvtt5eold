# =============================================================================
# 5etools Self-Hosted Setup Script for Windows
#
# This script automates the setup of a local 5etools web server.
# It checks for prerequisites, clones the required repositories,
# installs dependencies, and sets up PM2 to run the server.
#
# DISCLAIMER: This script was generated by an AI assistant in a Linux
# environment. It has not been tested on a Windows machine. Please
# review the script carefully before running it.
# =============================================================================

# --- Function to check for prerequisites ---
function Check-Prerequisites {
    Write-Host "--- Checking Prerequisites ---" -ForegroundColor Yellow

    # Check for Git
    try {
        Get-Command git.exe -ErrorAction Stop | Out-Null
        Write-Host "‚úÖ Git is installed." -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Git not found." -ForegroundColor Red
        Write-Host "Please install Git using the following command:"
        Write-Host "winget install -e --id Git.Git" -ForegroundColor Cyan
        Write-Host "Then, re-run this script."
        exit 1
    }

    # Check for Node.js
    try {
        Get-Command node.exe -ErrorAction Stop | Out-Null
        Write-Host "‚úÖ Node.js is installed." -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Node.js not found." -ForegroundColor Red
        Write-Host "Please install Node.js (LTS) using the following command:"
        Write-Host "winget install -e --id OpenJS.NodeJS.LTS" -ForegroundColor Cyan
        Write-Host "Then, re-run this script."
        exit 1
    }
}

# --- Main Script ---

# 1. Check Prerequisites
Check-Prerequisites

# 2. Get Installation Directory from User
$installPath = ""
while (-not $installPath) {
    $installPath = Read-Host -Prompt "Enter the directory where you want to install 5etools (e.g., C:\Projects)"
}

if (-not (Test-Path -Path $installPath)) {
    Write-Host "Directory not found. Creating it now: $installPath"
    New-Item -ItemType Directory -Path $installPath | Out-Null
}

Set-Location -Path $installPath
Write-Host "--- Installation directory set to: $(Get-Location) ---" -ForegroundColor Yellow

# 3. Clone Repositories
Write-Host "Cloning 5etools source repository... (This may take a moment)"
git clone https://github.com/5etools-mirror-3/5etools-src.git
if (-not $?) { Write-Host "‚ùå Failed to clone source repository. Aborting." -ForegroundColor Red; exit 1 }

Write-Host "Cloning 5etools image repository... (This is very large and will take a long time)"
git clone https://github.com/5etools-mirror-3/5etools-img.git 5etools-src/img
if (-not $?) { Write-Host "‚ùå Failed to clone image repository. Aborting." -ForegroundColor Red; exit 1 }

Write-Host "‚úÖ Repositories cloned successfully." -ForegroundColor Green

# 4. Install Dependencies and Build
Write-Host "--- Setting up Node.js dependencies ---" -ForegroundColor Yellow
Set-Location -Path "5etools-src"

Write-Host "Running 'npm install'... (This may take several minutes)"
npm install
if (-not $?) { Write-Host "‚ùå 'npm install' failed. Aborting." -ForegroundColor Red; exit 1 }

Write-Host "Building service worker for performance..."
npm run build:sw:prod
if (-not $?) { Write-Host "‚ùå Failed to build service worker. Continuing without it." -ForegroundColor Yellow }

Write-Host "‚úÖ Node.js setup complete." -ForegroundColor Green

# 5. Setup and Start with PM2
Write-Host "--- Setting up PM2 to manage the server ---" -ForegroundColor Yellow

$pm2_installed = (Get-Command pm2 -ErrorAction SilentlyContinue)

if (-not $pm2_installed) {
    Write-Host "PM2 not found. Attempting to install globally..."

    # Check for Admin privileges
    if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
        Write-Host "‚ùå Administrator privileges are required to install PM2 globally." -ForegroundColor Red
        Write-Host "Please re-run this script from a terminal that is 'Run as Administrator'."
        exit 1
    }

    npm install pm2 -g
    if (-not $?) { Write-Host "‚ùå Failed to install PM2. Aborting." -ForegroundColor Red; exit 1 }
    Write-Host "‚úÖ PM2 installed successfully." -ForegroundColor Green
} else {
    Write-Host "‚úÖ PM2 is already installed." -ForegroundColor Green
}

Write-Host "Starting 5etools server with PM2..."
pm2 start npm --name "5etools" -- run serve:dev
if (-not $?) { Write-Host "‚ùå Failed to start server with PM2." -ForegroundColor Red; exit 1 }

pm2 save
if (-not $?) { Write-Host "Could not save PM2 process list. You may need to run 'pm2 startup' as an administrator." -ForegroundColor Yellow }

# 6. Conclusion
Write-Host "--- üéâ Setup Complete! üéâ ---" -ForegroundColor Green
Write-Host "Your self-hosted 5etools server is now running in the background."
Write-Host "You can access it at: http://localhost:5050/index.html"
Write-Host ""
Write-Host "You can manage the server with these commands:"
Write-Host " 'pm2 list' - View server status" -ForegroundColor Cyan
Write-Host " 'pm2 stop 5etools' - Stop the server" -ForegroundColor Cyan
Write-Host " 'pm2 logs 5etools' - View server logs" -ForegroundColor Cyan
